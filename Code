#State Data

statedata <- read.csv(file.choose())
str(statedata)

#Problem 1.1 - Data Exploration
#We begin by exploring the data. Plot all of the states' centers with latitude on the y axis (the "y" variable in our dataset) and longitude on the x axis (the "x" variable in our dataset).
#The shape of the plot should look like the outline of the United States! Note that Alaska and Hawaii have had their coordinates adjusted to appear just off of the west coast.
plot(statedata$x, statedata$y)

#Problem 1.2 - Data Exploration
#Using the tapply command, determine which region of the US (West, North Central, South, or Northeast) has the highest average high school graduation rate of all the states in the region:
tapply(statedata$HS.Grad, statedata$state.region, mean)

#Problem 1.3 - Data Exploration
#Now, make a boxplot of the murder rate by region (for more information about creating boxplots in R, type ?boxplot in your console).

boxplot(statedata$Murder ~ statedata$state.region)
#Which region has the highest median murder rate?
#Answer: South


#Problem 1.4 - Data Exploration

#NortheastData = subset(statedata, state.region == "Northeast")
NortheastData = subset(statedata, state.region == "Northeast")
NortheastData$Murder
NortheastData$state.abb

#Problem 2.1 - Predicting Life Expectancy - An Initial Model
#We would like to build a model to predict life expectancy by state using the state statistics we have in our dataset.
#Build the model with all potential variables included (Population, Income, Illiteracy, Murder, HS.Grad, Frost, and Area). 
#Note that you should use the variable "Area" in your model, NOT the variable "state.area".

str(statedata)
model1 = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area,
            data = statedata)
summary(model1)
#What is the coefficient for "Income" in your linear regression model?
#Answer : -2.180e-05 

#Problem 2.3 - Predicting Life Expectancy - An Initial Model
#Now plot a graph of life expectancy vs. income

plot(statedata$Income, statedata$Life.Exp)

#Problem 3.1 - Predicting Life Expectancy - Refining the Model and Analyzing Predictions
#Recall that we discussed the principle of simplicity: that is, a model with fewer variables is preferable to a model with many unnnecessary variables.
#Experiment with removing independent variables from the original model. Remember to use the significance of the coefficients to decide which variables to remove
#(remove the one with the largest "p-value" first, or the one with the "t value" closest to zero), and to remove them one at a time (this is called "backwards variable selection"). 
#This is important due to multicollinearity issues - removing one insignificant variable may make another previously insignificant variable become significant.
#You should be able to find a good model with only 4 independent variables, instead of the original 7. Which variables does this model contain?

model2 = lm(Life.Exp ~ Population  + Murder + HS.Grad + Frost,
            data = statedata)
summary(model2)

#Problem 3.3 - Predicting Life Expectancy - Refining the Model and Analyzing Predictions
#Using the simplified 4 variable model that we created, we'll now take a look at how our predictions compare to the actual values.
#Take a look at the vector of predictions by using the predict function (since we are just looking at predictions on the training set, 
#you don't need to pass a "newdata" argument to the predict function).

sort(predict(model2))
#Which state do we predict to have the lowest life expectancy? (Hint: use the sort function)
statedata$state.name[1]   #Alabama
#Which state actually has the lowest life expectancy? (Hint: use the which.min function)
which.min(statedata$Life.Exp) #South Carolina



#Problem 3.4 - Predicting Life Expectancy - Refining the Model and Analyzing Predictions
#Which state do we predict to have the highest life expectancy?

sort(predict(model2))
statedata$state.name[47]  #Washington

#Which state actually has the highest life expectancy?
which.max(statedata$Life.Exp)
statedata$state.name[11]   #Hawaii










